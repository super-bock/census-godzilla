{"ast":null,"code":"export const raceVars = {\n  B03002_001E: 'Total',\n  B03002_003E: 'White',\n  B03002_004E: 'Black',\n  B03002_005E: 'Native',\n  B03002_006E: 'Asian',\n  B03002_007E: 'Pacific',\n  B03002_008E: 'Other',\n  B03002_009E: 'Multi',\n  B03002_012E: 'Hispanic'\n};\nexport const edVars = {\n  C15003_001E: 'Total',\n  C15003_010E: 'High School',\n  C15003_011E: 'GED',\n  C15003_012E: '1 Y College',\n  C15003_013E: '1+ Y College',\n  C15003_014E: 'Associates',\n  C15003_015E: 'Bachelor\\'s',\n  C15003_016E: 'Master\\'s',\n  C15003_017E: 'Professional',\n  C15003_018E: 'Doctorate'\n};\nexport class CensusSummary {\n  constructor(data, varMap) {\n    this.varMap = void 0;\n    this.data = void 0;\n    this.totals = void 0;\n    this.shares = void 0;\n\n    this.sumObjects = objs => {\n      return objs.reduce((acc, val) => {\n        if (!val) return acc;\n        Object.keys(val).map(k => acc[k] = (acc[k] || 0) + val[k]);\n        return acc;\n      }, {});\n    };\n\n    this.varMap = varMap;\n    this.data = data;\n    this.totals = {};\n    this.shares = {};\n  }\n\n  getTotals() {\n    this.totals = this.sumObjects(Object.values(this.data));\n    return Object.entries(this.totals).map(([k, v]) => this.shares[k] = v / this.totals['Total']);\n  }\n\n  mapCodeToDescriptor(data) {\n    return Object.assign( // @ts-ignore\n    ...Object.entries(data).map(([k, v]) => ({\n      [this.varMap[k]]: v\n    })));\n  }\n\n  sumShares(varList, newVar) {\n    const newVal = Object.entries(this.shares).reduce((acc, [k, v]) => {\n      if (varList.includes(k)) {\n        acc += v ? v : 0;\n        delete this.shares[k];\n      }\n\n      return acc;\n    }, 0);\n    this.shares[newVar] = newVal;\n  }\n\n  mapDataToDescriptor() {\n    Object.entries(this.data).forEach(([k, v]) => {\n      const newItem = this.mapCodeToDescriptor(v);\n      this.data[k] = newItem;\n    });\n  }\n\n}","map":{"version":3,"sources":["/home/pantero/Code/Codeworks/census-godzilla/src/data/ReferenceData.tsx"],"names":["raceVars","B03002_001E","B03002_003E","B03002_004E","B03002_005E","B03002_006E","B03002_007E","B03002_008E","B03002_009E","B03002_012E","edVars","C15003_001E","C15003_010E","C15003_011E","C15003_012E","C15003_013E","C15003_014E","C15003_015E","C15003_016E","C15003_017E","C15003_018E","CensusSummary","constructor","data","varMap","totals","shares","sumObjects","objs","reduce","acc","val","Object","keys","map","k","getTotals","values","entries","v","mapCodeToDescriptor","assign","sumShares","varList","newVar","newVal","includes","mapDataToDescriptor","forEach","newItem"],"mappings":"AA+CA,OAAO,MAAMA,QAAQ,GAAG;AACtBC,EAAAA,WAAW,EAAE,OADS;AAEtBC,EAAAA,WAAW,EAAE,OAFS;AAGtBC,EAAAA,WAAW,EAAE,OAHS;AAItBC,EAAAA,WAAW,EAAE,QAJS;AAKtBC,EAAAA,WAAW,EAAE,OALS;AAMtBC,EAAAA,WAAW,EAAE,SANS;AAOtBC,EAAAA,WAAW,EAAE,OAPS;AAQtBC,EAAAA,WAAW,EAAE,OARS;AAStBC,EAAAA,WAAW,EAAE;AATS,CAAjB;AAWP,OAAO,MAAMC,MAAM,GAAG;AACpBC,EAAAA,WAAW,EAAE,OADO;AAEpBC,EAAAA,WAAW,EAAE,aAFO;AAGpBC,EAAAA,WAAW,EAAE,KAHO;AAIpBC,EAAAA,WAAW,EAAE,aAJO;AAKpBC,EAAAA,WAAW,EAAE,cALO;AAMpBC,EAAAA,WAAW,EAAE,YANO;AAOpBC,EAAAA,WAAW,EAAE,aAPO;AAQpBC,EAAAA,WAAW,EAAE,WARO;AASpBC,EAAAA,WAAW,EAAE,cATO;AAUpBC,EAAAA,WAAW,EAAE;AAVO,CAAf;AAeP,OAAO,MAAMC,aAAN,CAAoB;AAK3BC,EAAAA,WAAW,CAACC,IAAD,EAA+CC,MAA/C,EAAkF;AAAA,SAJ7FA,MAI6F;AAAA,SAH7FD,IAG6F;AAAA,SAF7FE,MAE6F;AAAA,SAD7FC,MAC6F;;AAAA,SAO7FC,UAP6F,GAO1DC,IAAtB,IAAoC;AAC/C,aAAOA,IAAI,CAACC,MAAL,CAAY,CAACC,GAAD,EAAkBC,GAAlB,KAA6B;AAC9C,YAAI,CAACA,GAAL,EAAU,OAAOD,GAAP;AACVE,QAAAA,MAAM,CAACC,IAAP,CAAYF,GAAZ,EAAiBG,GAAjB,CAAyBC,CAAD,IAASL,GAAD,CAAmBK,CAAnB,IAAwB,CAACL,GAAG,CAACK,CAAD,CAAH,IAAU,CAAX,IAAgBJ,GAAG,CAACI,CAAD,CAA3E;AACA,eAAOL,GAAP;AACD,OAJM,EAIJ,EAJI,CAAP;AAKD,KAb4F;;AAC3F,SAAKN,MAAL,GAAcA,MAAd;AACA,SAAKD,IAAL,GAAYA,IAAZ;AACA,SAAKE,MAAL,GAAc,EAAd;AACA,SAAKC,MAAL,GAAc,EAAd;AACD;;AAWDU,EAAAA,SAAS,GAAG;AACV,SAAKX,MAAL,GAAc,KAAKE,UAAL,CAAgBK,MAAM,CAACK,MAAP,CAAc,KAAKd,IAAnB,CAAhB,CAAd;AACA,WAAOS,MAAM,CAACM,OAAP,CAAe,KAAKb,MAApB,EAA4BS,GAA5B,CAAgC,CAAC,CAACC,CAAD,EAAII,CAAJ,CAAD,KAAa,KAAKb,MAAL,CAAYS,CAAZ,IAAiBI,CAAC,GAAG,KAAKd,MAAL,CAAY,OAAZ,CAAlE,CAAP;AACD;;AAGDe,EAAAA,mBAAmB,CAACjB,IAAD,EAAkB;AACnC,WAAOS,MAAM,CAACS,MAAP,EACP;AACE,OAAGT,MAAM,CAACM,OAAP,CAAef,IAAf,EAAqBW,GAArB,CAAyB,CAAC,CAACC,CAAD,EAAII,CAAJ,CAAD,MAAa;AACvC,OAAC,KAAKf,MAAL,CAAYW,CAAZ,CAAD,GAAkBI;AADqB,KAAb,CAAzB,CAFE,CAAP;AAMD;;AAEDG,EAAAA,SAAS,CAACC,OAAD,EAAoBC,MAApB,EAAoC;AAE3C,UAAMC,MAAM,GAAGb,MAAM,CAACM,OAAP,CAAe,KAAKZ,MAApB,EAA4BG,MAA5B,CAAmC,CAACC,GAAD,EAAM,CAACK,CAAD,EAAII,CAAJ,CAAN,KAAiB;AACjE,UAAII,OAAO,CAACG,QAAR,CAAiBX,CAAjB,CAAJ,EAAyB;AACvBL,QAAAA,GAAG,IAAIS,CAAC,GAAGA,CAAH,GAAO,CAAf;AACA,eAAO,KAAKb,MAAL,CAAYS,CAAZ,CAAP;AACD;;AACD,aAAOL,GAAP;AACD,KANc,EAMZ,CANY,CAAf;AAOA,SAAKJ,MAAL,CAAYkB,MAAZ,IAAsBC,MAAtB;AACD;;AAIDE,EAAAA,mBAAmB,GAAG;AACpBf,IAAAA,MAAM,CAACM,OAAP,CAAe,KAAKf,IAApB,EAA0ByB,OAA1B,CAAkC,CAAC,CAACb,CAAD,EAAII,CAAJ,CAAD,KAAY;AAC5C,YAAMU,OAAO,GAAG,KAAKT,mBAAL,CAAyBD,CAAzB,CAAhB;AACA,WAAKhB,IAAL,CAAUY,CAAV,IAAec,OAAf;AACD,KAHD;AAID;;AAvD0B","sourcesContent":["export interface EducationCodes {\n\tC15003_001E: string;\n\tC15003_010E: string;\n\tC15003_011E: string;\n\tC15003_012E: string;\n\tC15003_013E: string;\n\tC15003_014E: string;\n\tC15003_015E: string;\n\tC15003_016E: string;\n\tC15003_017E: string;\n\tC15003_018E: string;\n}\nexport interface RaceCodes {\n\tB03002_001E: string;\n\tB03002_003E: string;\n\tB03002_004E: string;\n\tB03002_005E: string;\n\tB03002_006E: string;\n\tB03002_007E: string;\n\tB03002_008E: string;\n\tB03002_009E: string;\n\tB03002_012E: string;\n}\nexport interface RaceCategories {\n\tAsian: number;\n\tBlack: number;\n\tHispanic: number;\n\tMulti: number;\n\tNative: number;\n\tOther: number;\n\tPacific: number;\n\tTotal: number;\n\tWhite: number;\n}\nexport interface EducationCategories {\n\t'1 Y College': number;\n\t'1+ Y College': number;\n\tAssociates: number;\n\t'Bachelor\\'s': number;\n\tDoctorate: number;\n\tGED: number;\n\t'High School': number;\n\t'Master\\'s': number;\n\tProfessional: number;\n\tTotal: number;\n}\n\nexport const raceVars = {\n  B03002_001E: 'Total',\n  B03002_003E: 'White',\n  B03002_004E: 'Black',\n  B03002_005E: 'Native',\n  B03002_006E: 'Asian',\n  B03002_007E: 'Pacific',\n  B03002_008E: 'Other',\n  B03002_009E: 'Multi',\n  B03002_012E: 'Hispanic',\n};\nexport const edVars = {\n  C15003_001E: 'Total',\n  C15003_010E: 'High School',\n  C15003_011E: 'GED',\n  C15003_012E: '1 Y College',\n  C15003_013E: '1+ Y College',\n  C15003_014E: 'Associates',\n  C15003_015E: 'Bachelor\\'s',\n  C15003_016E: 'Master\\'s',\n  C15003_017E: 'Professional',\n  C15003_018E: 'Doctorate',\n};\n\ntype AnyObject = { [key: string]: any };\n\nexport class CensusSummary {\nvarMap: AnyObject;\ndata: AnyObject;\ntotals: AnyObject;\nshares: AnyObject;\nconstructor(data: { [key: string]: EducationCategories }, varMap: { [key: string]: string }) {\n  this.varMap = varMap;\n  this.data = data;\n  this.totals = {};\n  this.shares = {};\n}\n\nsumObjects = <T extends AnyObject>(objs: T[]) => {\n  return objs.reduce((acc: Partial<T>, val: T) => {\n    if (!val) return acc;\n    Object.keys(val).map<T>((k) => ((acc as AnyObject)[k] = (acc[k] || 0) + val[k]));\n    return acc;\n  }, {});\n};\n\n\ngetTotals() {\n  this.totals = this.sumObjects(Object.values(this.data));\n  return Object.entries(this.totals).map(([k, v]) => (this.shares[k] = v / this.totals['Total']));\n}\n\n\nmapCodeToDescriptor(data: AnyObject) {\n  return Object.assign(\n  // @ts-ignore\n    ...Object.entries(data).map(([k, v]) => ({\n      [this.varMap[k]]: v,\n    }))\n  );\n}\n\nsumShares(varList: string[], newVar: string) {\n\n  const newVal = Object.entries(this.shares).reduce((acc, [k, v]) => {\n    if (varList.includes(k)) {\n      acc += v ? v : 0;\n      delete this.shares[k];\n    }\n    return acc;\n  }, 0);\n  this.shares[newVar] = newVal;\n}\n\n\n\nmapDataToDescriptor() {\n  Object.entries(this.data).forEach(([k, v]) => {\n    const newItem = this.mapCodeToDescriptor(v);\n    this.data[k] = newItem;\n  });\n}\n\n}\n"]},"metadata":{},"sourceType":"module"}